ScummVM README
Last updated:    2003-03-17
Release version: 0.3.2cvs
------------------------------------------------------------------------

For more information, compatibility lists, details on donating, the latest
release, progress reports and more, please visit the ScummVM home page
at: http://www.scummvm.org/


About:
------
ScummVM is an implementation of the SCUMM (Script Creation Utility for
Maniac Mansion) engine used in various Lucas Arts games such as Monkey
Island and Day of the Tentacle. At this time ScummVM should be considered
ALPHA software, as it's still under heavy development. Be aware that while
many games will work with few major bugs, crashes can happen. Also note
that saved games can, and probably will, be incompatible between releases.

Also ScummVM is capable of playing several non-SCUMM games, at the moment
this includes Simon The Sorcerer.

If you enjoy ScummVM feel free to donate using the PayPal button on the
ScummVM homepage. This will help us buy utilities needed to develop ScummVM
easier and quicker. If you cannot donate, help and contribute a patch!


Contacting:
-----------
The easiest way to contact the ScummVM team is by submitting bug reports or
commenting in our forums. You can also join and e-mail the scummvm-devel
mailing list, or chat with us on irc (#scummvm, irc.freenode.net)


Supported Games:
----------------
At the moment the following games have been reported to work, and should
be playable to the end:

        Indiana Jones & the Last Crusade (256)     [Game: indy3]
        Loom (16 color floppy version)             [Game: loom]
        Loom (256 color CD version)                [Game: loomcd]
        Zak McKracken (256 color FM Towns version) [Game: zak256]
        Monkey Island 1 (EGA version)              [Game: monkeyega]
        Monkey Island 1 (VGA version)              [Game: monkeyvga]
        Monkey Island 1 (CD version)               [Game: monkey/monkey1]
        Monkey Island 2                            [Game: monkey2]
        Indiana Jones And The Fate Of Atlantis     [Game: atlantis]
        Day Of The Tentacle                        [Game: tentacle]
        Sam & Max                                  [Game: samnmax]
        The Dig                                    [Game: dig]
        Simon The Sorcerer                         [Game: simon1dos/simon1talkie/simon1win]
        Simon the Sorcerer II                      [Game: simon2dos/simon2talkie/simon2win/simon2mac]

The following games should be finishable, but have some criticial problems that
prevent them from being fully supported at this time. Please do not file bug reports
about them.
        
        Indiana Jones & the Last Crusade (EGA)     [Game: indy3ega]
        Full Throttle                              [Game: ft]
        Curse of Monkey Island                     [Game: comi]

The following games should load, but are not yet fully playable. Play these at
your own risk, and please do not file bug reports about them. If you want
the latest updates on game compatibility, visit our web site and view the
compatibility chart.

        Putt-Putt Goes To The Moon                 [Game: puttmoon]
        Putt-Putt's Fun Pack                       [Game: funpack]
        Fatty Bear's Birthday Surprise             [Game: fbear]
        Fatty Bear's Fun Pack                      [Game: fbpack]
        Beneath A Steel Sky                        [Game: sky]

The following games are SCUMM engine, but NOT supported by ScummVM (yet).

        Maniac Mansion
        Zak McKracken (16 color floppy version)
        Putt-Putt Joins the Parade
        Most other Humongous Entertainment titles

Please be aware that the engine may contain bugs and unimplemented features
that sometimes make it impossible to finish the game. Save often, and please
file a bug report (instructions on submitting bug reports are below) if you
encounter such a bug.


Supported Platforms:
-------------------
ScummVM has been ported to run on many platforms and operating systems.
Links to these ports can be found either on the ScummVM web page or by a
Google search. Many thanks to the effort of porters. If you have a port of
ScummVM and wish to commit it into the main CVS, feel free to contact us!

        Windows         - SDL
        Windows CE      - SDL           (iPaq and other handheld devices)
        Linux           - X11 & OSS audio (includes iPaqs running Linux)
        Mac OS X        - SDL
        AmigaOS         - SDL/AGA
        MorphOS         - custom backend
        BeOS            - SDL
        Acorn (RiscOS)  - ???
        Dreamcast       - custom backend 
        GP32            - custom backend
        UNIX            - SDL           (Linux, Solaris, IRIX, *BSD)


Known Problems in ScummVM 0.4.0:
--------------------------------
This release has the following known problems. There is no need to report them,
although patches to fix them are welcome. If you discover a bug that is not
listed here, nor in the compatibility table on the web site, please see
the section on Reporting Bugs.

       Simon The Sorcerer:
                - No inventory scrolling arrows shown in simon1dos and simon1talkie,
                  can still move around inventory though. 
                - simon1dos freezes briefly after Swampling leaves his house and
                  when talking to demons in Sordid's Tower
                - Minor graphical glitches when using ring
                - Minor graphical glitch with Sordid statue after leaving room

       Simon The Sorcerer II:
                - No music in simon2dos and simon2talkie
                - Some music is missing or wrong in simon2win
                - Minor graphical glitch when giving items to baby
                - Only default language in data files is supported in simon2mac
                - F10 key animation in simon2mac is different compared to original game

       Indy 3 (The Last Crusade):
                - Music and Sound may not play
                - In some rooms Indy may be able to walk to odd places
                - There are some minor graphical glitches

       Monkey Island (EGA Version):
                - Music doesn't loop
                - Sound doesn't play

       Indy 4 (Fate Of Atlantis):
                - Keyboard fighting does not work. ScummVM now defaults to
                  using mouse fighting.

       Sam and Max:
                - Highway subgame does not behave correctly.

       Zak McKracken Fm Towns:
                - The Fm Towns 256 color version of Zak McKracken is rare,
                  And as the ScummVM team does not encourage piracy in any
                  way, we do not know where to buy or download a copy of this
                  game. Petition LucasArts to re-release it :)

       All CD games:
               - If you are experiencing random crashes, and your game
                 plays music from CD, you have encountered a Windows bug.
                 Try copying the data files from CD to your hard disk, and
                 running them from there.


Simon the Sorcerer 1 and 2 games note
--------------------------------------
The Simon the Sorcerer 1 & 2 games were split into several targets to make 
coding easier and to make it more clear which target should be used:
       simon1dos    - Use for Simon the Sorcerer 1 for DOS (Disk)
       simon2dos    - Use for Simon the Sorcerer 2 for DOS (Disk)
       simon1talkie - Use for Simon the Sorcerer 1 Talkie for DOS (CD)
       simon2talkie - Use for Simon the Sorcerer 2 Talkie for DOS (CD)
       simon1win    - Use for Simon the Sorcerer 1 Talkie for Windows (CD)
       simon2win    - Use for Simon the Sorcerer 2 Talkie for Windows (CD)
       simon2mac    - Use for Simon the Sorcerer 2 Talkie for Amiga or Mac (CD)

If you have the dual version of Simon the Sorcerer 1 or 2 on CD,
then you will find the Windows version in the main directory of CD
and the DOS Talkie version in the DOS directory of the CD.

The filenames of saved games for Simon the Sorcerer 1 & 2 were changed in 0.3.0 to:
Simon the Sorcerer 1 uses simon1.00x (Where x is the slot number) 
Simon the Sorcerer 2 uses simon2.00x (Where x is the slot number) 
So if you have any pre 0.3.0 save games you will need to change their filenames to use them


Reporting Bugs:
---------------
To report a bug, please create a SourceForge account and follow the bugs
link from our homepage. Please make sure the bug is reproducible, and
still occurs in the latest daily build/current CVS version. Also check
the existing bug list, and compatibility listing for that game, to
ensure the issue is not already known.

Do NOT report bugs on games that are not listed as being completable
above. We -know- those games have bugs.

Please include the following information:
        - ScummVM version (PLEASE test the latest CVS/Daily build)
        - Bug details, including instructions on reproducing
        - Language of game (English, German, etc)
        - Version of game (Talkie, Floppy...)
        - Platform and Compiler (Win32, Linux, FreeBSD, etc)
        - Attach a save game if possible
        - If this bug only occurred recently, please note the last
          version without the bug, and the first version including
          the bug. That way we can fix it quicker by looking at the
          changes made.


Compiling:
----------
You need SDL-1.2.2 or newer (older versions may work, but are unsupported), and
a supported compiler. Several compilers, including GCC, mingw and Microsoft
Visual C++ are supported. If you wish to use MP3-compressed CD tracks or
.SOU files, you will need to install the MAD library and define
USE_MAD. Tools for compressing .SOU files to .SO3 files can be
found in the 'tools' CVS module, or in the 'scummvm-tools' package.

You can also comment/uncomment appropriate lines in the build.rules file to
use sdl_gl.cpp instead of sdl.cpp. This allows hardware accelerated bilinear
filtering by using OpenGL textures.

On Win9x/NT/XP you can define USE_WINDBG and attach WinDbg to browse debug 
messages (see http://www.sysinternals.com/ntw2k/freeware/debugview.shtml).

    GCC:
        * Type make (or gmake if that's what GNU make is called on your
          system) and hopefully ScummVM will compile for you.

    Mingw:
        * Open Makefile.mingw, alter SDL paths and choose compiling options.
        * Type make -f Makefile.mingw and hopefully ScummVM will compile for you.

    Microsoft Visual C++:
        * Open the workspace, scummwm.dsw
        * Enter the path to the SDL include files in Tools|Options|Directories
        * Now it should compile successfully.

    PocketPC - Windows CE:
        * Download the SDLAudio library:
          http://arisme.free.fr/PocketScumm/sources/SDLAudio-1.2.3-src.zip
        * Open and compile the SDLAudio WCEBuild/WCEBuild workspace in EVC++
        * Open the ScummVM wince/PocketScumm workspace
        * Enter the SDLAudio directory to your includes path
        * Enter the compiled SDLAudio.lib to your link libraries list
        * Now it should compile successfully

    Debian GNU/Linux:
        * Install the packages 'build-essential', 'fakeroot', 'debhelper',
          'libsdl1.2-dev', and 'libmad0-dev' on your system.
        * Optional: Install the 'libvorbis-dev' and/or the 'libasound2-dev'
          packages, and edit the Makefile to turn on support for Ogg Vorbis
          and/or the ALSA sequencer.
        * Run 'make deb'.
        * Finally run 'dpkg -i ../scummvm-cvs*deb', and you're done.
        
    Mac OS X:
        * Make sure you have the developer tools installed.
        * Edit backends/sdl/build.rules, and enable the Mac OS X specific line(s).
        * Depending on where you have installed SDL, you have to add the location
          of its headers to the INCLUDES variables. For example if you installed SDL
          via Fink, you can add this at the end of build.rules:
          INCLUDES+= -I/sw/include
        * You can now 'make' to create a command line binary.
        * To get a version you can run from Finder, type 'make bundle' which will
          create ScummVM.app.


Running:
--------
Before you run the engine, you need to put the game's datafiles in a
directory. The filenames must not be in mixed case on *nix systems
(ie monkey2.000 or MONKEY2.000). If you use a game with speech, the file
monster.sou must reside in the same directory as the datafiles.

For example, to run a copy of Monkey Island installed in C:\Games\LucasArts
under Windows, you would make a shortcut calling this command:

  C:\Games\LucasArts\scummvm.exe -f -pC:\Games\LucasArts\monkey\ monkey

Under Unix, the commandline would be:

  /path/to/scummvm -f -p/games/LucasArts/monkey/ monkey

Or, if you have, for example, Full Throttle on CD, and your CD drive is D:,
and you wish to disable subtitles and run in fullscreen:

  C:\Games\LucasArts\scummvm.exe -f -n -pD:\resource\ ft
  /path/to/scummvm -f -n -p/mnt/cdrom/resource/ ft

Note that if you run the game once this way, and specify the -w commandline
parameter (or edit the config file manually), ScummVM will remember the
path, and other settings for this game. Documentation on the configuration
file can be found near the end of this readme.

The short game name ('game target') you see at the end of the command
line is very important. A short list is contained at the top of this
file. You can also get the current list of games and game names at:

        http://www.scummvm.org/compatibility.php

For the adventurous, who like to live on the edge... you can download
daily builds of Win32 from the Download page of the main ScummVM homepage.


Command Line Options:
---------------------

        scummvm [OPTIONS] [GAME]

        [GAME]     - Short name of game to load. For example, 'monkey' for Monkey Island.
        
        -p<path>   - Path to where the game is installed. Default is Cwd.
        -x[<num>]  - Save game slot to load (default: autosave)
        -f         - Full-screen mode.
        -g<mode>   - Select graphics scaler. See below.
        -e<mode>   - Select sound engine. See below.
        -a         - Enable amiga pal conversion, for playing Amiga versions
        -q<lang>   - Select language. See below.
        -c<num>    - Drive to play cd audio from.  E.g., 0 is first drive.
        -m<num>    - Set the music volume, 0-255.  Default is '192'
        -o<num>    - Set the master volume, 0-255. Default is '192'
        -s<num>    - Set the sfx volume, 0-255.    Default is '192'
        -t<num>    - Set music tempo. Adlib default: 0x1D9000, Midi: 0x4A0000
        -n         - Disable subtitles. Use with games that have voice.
        -y         - Set talk speed ('yak option'). Default is '60'
        -l<file>   - Load alternate configuration file
        -w[<file>] - Write configuration file
        -v         - Show version information and exit
        -z         - Display list of games
        -b<num>    - Start in room <num>.
        -d[<num>]  - Set debug verbosity to <num>
        -u         - Dump scripts if a directory called 'dumps' exists in current directory


Hot Keys:
---------
ScummVM supports various in game hotkeys. They differ between the scumm and
simon games.

    Common:
        Ctrl-z OR Alt-x        - quit
        Keyboard Arrow Keys    - simulate mouse movement
        Ctrl-f                 - runs in fast mode.
        Ctrl-Alt 1-9           - Switch between graphics filters
        Ctrl-Alt 1             - Switch beetwen bilinear and non-linear filtering [OpenGL backend]
        Ctrl-Alt 2             - Don't fit the game in the whole screen (black borders) [OpenGL backend]
        Ctrl-Alt 3             - Fit the game in the whole screen (no black borders) [OpenGL backend]
        Ctrl-Alt 4-7           - Switch between graphics filters [OpenGL backend]

    Scumm:
        Ctrl 0-9 and Alt 0-9   - load and save game state
        Ctrl-g                 - runs in really REALLY fast mode.
        Ctrl-d                 - starts the debugger.
        Tilde (~)              - Show/hide the debugging console
        Ctrl-s                 - shows memory consumption.
        [ and ]                - music volume, down/up
        - and +                - text speed, slower/faster
        F5                     - displays a save/load box.
        Space                  - pauses
        Period (.)             - skips current line of text in some games
        Alt-Enter              - toggles full screen/windowed
        Enter                  - simulate left mouse button press
        Tab                    - simulate right mouse button press

    Simon:
        F1 - F3                - text speed, faster - slower
        - and +                - music volume, down/up
        m                      - music on/off
        s                      - sound effects on/off
        b                      - background sounds on/off

Note that using ctrl-f and ctrl-g are not recommended: Games can crash when
being ran faster than their normal speed, as scripts will loose synchronisation


Language options:
-----------------
ScummVM includes a language option for the Curse of Money Island and the Simon the Sorcerer 1 & 2 games.

        en  - English (default)
        de  - German
        fr  - French
        it  - Italian
        pt  - Portuguese
        es  - Spanish
        ja  - Japanese
        zh  - Chinese
        ko  - Korean
        hb  - Hebrew

Graphics filters:
-----------------
ScummVM offers several anti-aliasing filters to attempt to improve visual
quality. These are the same filters used in many other emulators, such as
MAME. 
Note: the resolutions listed assume the game was originally 320x200

They are:
        normal     - No filtering, original 320x200 resolution. Fastest.
        2x         - No filtering, double screen/window size to 640x400 (default)
        3x         - No filtering, triple screen/window size to 960x600
        2xsai      - 2xsai filtering, double screen/window size to 640x400
        super2xsai - Enhanced 2xsai filtering. 640x400 screen/window size
        supereagle - Less blurry than 2xsai, but slower. Also 640x400
        advmame2x  - 640x400 scaling. Doesn't rely on blurring like 2xSAI.
        tv2x       - 640x400 scaling. Horizontal scanlines.
        dotmatrix  - 640x400 scaling. Dot matrix effect.

To select a graphics filter, pass its name via the '-g' option to scummvm, for example:

    scummvm -g advmame2x monkey2

Note #1: Not all backends support all or any filters. The ones listed above
are for the default SDL backend.

Note #2: Filters can be very slow when ScummVM is compiled in a debug
configuration without optimizations. And there is always a speed impact when
using any form of anti-aliasing/linear filtering.

Note #3: The FmTowns version of Zak (zak256 target) uses an original resolution
of 320x240 - hence for this game scalers will scale to 640x480 or 960x720.


Autosaves:
----------
Because ScummVM is still a beta product, it -can- crash and/or hang
occasionally. As such, every five minutes it will save a game in Slot 0. This
game can be loaded via Ctrl-0, or the F5 menu. This autosaving only applies to
Scumm games, not other games (such as Simon the Sorcerer)


Savegames:
----------
Savegames are by default put in the current directory. You can specify the save
in the config file by setting the savepath parameter. See the example config
file later in this readme.

You can also use the environment variable SCUMMVM_SAVEPATH to specify where to
put save games. Don't forget the trailing directory separator. Also be aware
that saved games can, and probably WILL, break between ScummVM releases.

Bash (Unix) Example:
        export SCUMMVM_SAVEPATH=/tmp/scummvm_savegames/

Windows example:
        set SCUMMVM_SAVEPATH=C:\saved_games\


Music and Sound: 
----------------
By default, on most operating systems, ScummVM will automatically use Adlib
emulation. MIDI may not be available on all operating systems or may need
manual configuration. If you ARE using MIDI, you have several different
choices of output, depending on your operating system and configuration.
        
        adlib     - Uses internal Adlib Emulation (default) 
        windows   - Windows MIDI. Uses built-in sequencer, for Windows users
        seq       - Uses /dev/sequencer for MIDI, *nix users. See below.
        qt        - Quicktime sound, for Macintosh users.
        core      - CoreAudio sound, for MacOS X users.
        amidi     - Uses the MorphOS MIDI system, for MorphOS users
        alsa      - Output using ALSA sequencer device. See below.
        null      - Null output. Don't play any music.

To select a sound driver, pass its name via the '-e' option to scummvm, for example:

    scummvm -e adlib monkey2


Playing sound with Adlib emulation:
-----------------------------------
By default an Adlib card will be emulated and ScummVM will output the music
as sampled waves. This is the default mode for most games, and offers the
best compatibility between machines and games.


Playing sound with MIDI emulation:
----------------------------------
Until recently, some games (particularly Sam and Max) were only able to run
in MIDI mode. This prevented music for these games from working on platforms
that do not support MIDI, or soundcards that do not provide MIDI drivers (e.g.,
many soundcards will not play MIDI under Linux). ScummVM can now emulate MIDI
mode using sampled waves and Adlib emulation using the -eadlib option.
However, if you are capable of using native MIDI, we recommend using one of
the MIDI modes below for best sound.


Playing sound with Native MIDI:
-------------------------------
Use the appropriate -e<mode> command line option from the list above to
select your preferred MIDI device. For example, if you wish to use the
Windows MIDI driver, use the -ewindows option.


Playing sound with Sequencer MIDI:              [UNIX ONLY]
----------------------------------
If your soundcard driver supports a sequencer, you may set the environment
variable "SCUMMVM_MIDI" to your sequencer device - e.g., /dev/sequencer

If you have problems with not hearing audio in this configuration, it is
possible you will need to set the "SCUMMVM_MIDIPORT" variable to 1 or 2. This
selects the port on the selected sequencer to use. Then start scummvm with the
-eseq parameter. This should work on several cards, and may offer better
performance and quality than Adlib emulation. However, for those systems where
sequencer support does not work, you can always fall back on Adlib emulation.


Playing sound with ALSA sequencer:              [UNIX ONLY]
----------------------------------
If you have installed the ALSA driver with the sequencer support, then
set the environment variable "SCUMMVM_PORT" to your sequencer port - e.g. 65:0

Here is a little howto on how to use the ALSA sequencer with your soundcard.
In all cases, to have a list of all the sequencer ports you have, try the
command "aconnect -o -l". This should give output similar to:
client 64: 'External MIDI 0' [type=kernel]
    0 'MIDI 0-0        '
client 65: 'Emu10k1 WaveTable' [type=kernel]
    0 'Emu10k1 Port 0  '
    1 'Emu10k1 Port 1  '
    2 'Emu10k1 Port 2  '
    3 'Emu10k1 Port 3  '
client 128: 'Client-128' [type=user]
    0 'TiMidity port 0 '
    1 'TiMidity port 1 '

This means the external MIDI output of the sound card is located on the
port 64:0, four WaveTable MIDI outputs in 65:0, 65:1, 65:2
and 65:3, and two TiMidity ports, located at 128:0 and 128:1.

If you have a FM-chip on your card, like the SB16, then you have to load
the soundfonts using the sbiload software. Example:
  sbiload -p 65:0 /etc/std.o3 /etc/drums.o3

If you have a WaveTable capable sound card, you have to load a sbk or sf2
soundfont using the sfxload software. Example:
  sfxload /path/to/8mbgmsfx.sf2

If you don't have a MIDI capable soundcard, or if you want to take advantage of
your TiMidity samples, then you can ask TiMidity to become an ALSA sequencer
output. Here is a quick way to do so:
  timidity -iAqqq -B2,8 -Os1S -s 44100 &
If you get distorted output with this setting try dropping the -B2,8 or
changing the value.

Then the TiMidity port will be visible from the 'aconnect -o -l' list. You
should launch it as root, since it will try to set up some real time
priority.


Using MP3 files for CD audio:
-----------------------------
Use LAME or some other mp3 encoder to rip the cd audio tracks to files. Name
the files track1.mp3 track2.mp3 etc. ScummVM must be compiled with MAD support
to use this option. You'll need to rip the file from the CD as a WAV file,
then encode the MP3 files in Constant Bit Rate sampled at 22 kHz. This can
be done with the following LAME command line:

  lame -t -q 0 -b 96 --resample 22.05 track1.wav track1.mp3


Using Ogg Vorbis files for CD audio:
------------------------------------
Use oggenc or some other vorbis encoder to encode the audio tracks to files.
Name the files track1.ogg track2.ogg etc. ScummVM must be compiled with vorbis
support to use this option. You'll need to rip the files from the CD as a WAV
file, then encode the vorbis files to be sampled at 22 kHz. This can be done
with the following oggenc command line with the value after q specifying 
the desired quality from 0 to 10:

  oggenc -q 5 --resample 22050 track1.wav


Compressing MONSTER.SOU with MP3:
---------------------------------
You need LAME, and our extract util from the scummvm-tools package to perform
this task, and ScummVM must be compiled with MAD support.

Make a backup file of your MONSTER.SOU before attempting this. Copy your
MONSTER.SOU file to a temporary folder. Then run:

  extract monster.sou

In about 30 minutes or so, you will have a much smaller monster.so3 file,
copy this file to your game dir. You can safely remove the monster.sou file.


Compressing MONSTER.SOU with Ogg Vorbis:
----------------------------------------
As above but run:

  extract --vorbis monster.sou

This should produce a smaller monster.sog file, which you should copy to your
game dir.


Using data files from Macintosh game versions:
----------------------------------------------
All LucasArts Scumm based adventures except CMI also exist in versions for the
Macintosh. ScummVM can use most (all?) of them, however, in some case some
additional work is required. First off, if you are not using a Macintoh for
this, accessing the CD/floppy data might be tricky. There are various tools on
the net for this, though.

Secondly, most of the newer games shipped only with a  single data file on the
Macintosh. You first have to run the 'rescumm' tool from the scummvm-tools
package to extract the data files ScummVM excpects. You invoke rescumm like
this (where DATAFILE is the path to the single big data file):

   rescumm DATAFILE

It will extract the data into the current directory, so make sure to run it from
a writable directory.


Configuration file:
-------------------
By default, the configuration file is saved in, and loaded from:

        Windows:  <windir>\scummvm.ini,
        Unix:     ~/.scummvmrc
        Mac OS X: ~/Library/Preferences/ScummVM Preferences
        Others:   scummvm.ini in the current directory

An example config file looks as follows:

        [scummvm]
        gfx_mode=supereagle
        fullscreen=true
        savepath=C:\saves\

        [germandott]
        gameid=tentacle
        path=C:\german\tentacle\
        description=German version of DOTT

        [tentacle]
        path=C:\tentacle\
        nosubtitles=true
        master_volume=98
        music_volume=40
        sfx_volume=255

        [loomcd]
        cdrom=1
        path=C:\loom\
        talkspeed=55
        
        [monkey2]
        path=C:\amiga_mi2\
        music_driver=windows
        amiga=true



Credits:
--------
 The core ScummVM team:
        James Brown          - Lead developer
        Vincent Hamm         - Developer (retired)
        Max Horn             - Developer, MacOS X port, new GUI
        Jeremy Newman        - Webmaster
        Ludvig Strigeus      - Original ScummVM author, initial Simon support (retired)

 Developers:
        Torbjorn Andersson   - Many different contributions
        Nicolas Bacca        - PocketPC/WinCE port
        Ralph Brorsen        - Helped write the new GUI (retired)
        Jamieson Christian   - Lots of work on iMuse/MIDI
        Marcus Comstedt      - Dreamcast port
        Robert Goeffringmann - Beneath a Steel Sky support
        Jonathan Gray        - Expert weaver in the Loom
        Ruediger Hanke       - MorphOS port
        Travis Howell        - Daily Win32 builds, Simon The Sorcerer work
        Felix Jakschitsch    - His hard work on Zak256
        Oliver Kiehl         - Simon The Sorcerer work/Beneath a Steel Sky support
        Pawel Kolodziejski   - Added missing Dig/COMI SMUSH codecs, iMuse work
        Mutwin Kraus         - MacOS Carbon port (retired)
        Peter Moraliyski     - GP32 port
        Nicolas Noble        - Config file and ALSA support
        Joost Peters         - Beneath a Steel Sky support
        Lionel Ulmer         - X11 backend

 Contributors:
        Janne Huttunen       - V3 actor mask support, Dig/FT SMUSH audio
        Kovacs Endre Janos   - Several fixes for Simon1
        Jeroen Janssen       - Numerous readability and bugfix patches
        Claudio Matsuoka     - Daily Linux/BeOS builds (http://scummvm.sf.net/daily/)
        Gregory Montoir      - AdvanceMAME Scale-2X, TV 2x and Dot Matrix implementation
        Mikesch Nepomuk      - MI1 VGA Floppy patches.
        Edward Rudd          - Fixes for playing MP3 versions of MI1/Loom Audio
        Daniel Schepler      - Final MI1 CD music support/ Initial Ogg Vorbis support
        Andre Souza          - SDL-based OpenGL renderer
        Tim 'realmz'         - Initial MI1 CD music support

        And to all the contributors, users, and beta testers we've missed.
        Thanks!

 Special thanks to:
        Sander Buskens  - For his work on the initial reversing of Monkey2
        Jimmi Thogersen - For ScummRev, and much obscure code/documentation
        Kevin Carnes    - For Scumm16, the basis of ScummVM older gfx codecs

        Aric Wilmunder, Ron Gilbert, David Fox, Vince Lee, and all those at
        LucasFilm/LucasArts who made SCUMM the insane mess to reimplement
        that it is today. Feel free to drop us a line and tell us what you
        think, guys!



------------------------------------------------------------------------
Good Luck and Happy Adventuring!
The ScummVM team.
http://www.scummvm.org/
------------------------------------------------------------------------
